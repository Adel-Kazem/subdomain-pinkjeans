



---- the logcial javascript Alpine encapsulation to use without redefining them --
File Path: C:\xampp\htdocs\subdomain-pinkjeans\js/app.js

// app.js - Shared Alpine.js Components for E-commerce
document.addEventListener('alpine:init', () => {
    /**
     * UI Utilities Store
     * Handles common UI interactions across all pages
     */
    Alpine.store('ui', {
        // WhatsApp business phone number
        whatsAppNumber: '96170608543',

        // Menu state
        isMenuOpen: false,

        // Cart notification state
        cartNotificationVisible: false,

        // Toggle mobile menu
        toggleMenu() {
            this.isMenuOpen = !this.isMenuOpen;
        },

        // Close mobile menu
        closeMenu() {
            this.isMenuOpen = false;
        },

        // Show cart notification
        showCartNotification() {
            this.cartNotificationVisible = true;
            setTimeout(() => {
                this.cartNotificationVisible = false;
            }, 3000);
        },

        // Scroll to top
        scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        },

        // Enhanced WhatsApp opening function with customizable message
        openWhatsApp(message = 'Hello, I have a question about your products.') {
            const encodedMessage = encodeURIComponent(message);
            window.open(`https://wa.me/${this.whatsAppNumber}?text=${encodedMessage}`, '_blank');
        }
    });

    /**
     * Shopping Cart Store
     * Handles cart functionality across all pages
     */
    Alpine.store('cart', {
        items: [],

        init() {
            // Load cart from localStorage if available
            const savedCart = localStorage.getItem('cartItems');
            if (savedCart) {
                try {
                    this.items = JSON.parse(savedCart);
                } catch (e) {
                    console.error('Failed to parse saved cart:', e);
                    this.items = [];
                }
            }
        },

        saveCart() {
            localStorage.setItem('cartItems', JSON.stringify(this.items));
        },

        addItem(product, quantity = 1, options = {}) {
            // Check if product with the same options already exists
            const existingItemIndex = this.items.findIndex(item =>
                item.id === product.id &&
                JSON.stringify(item.options) === JSON.stringify(options)
            );

            if (existingItemIndex >= 0) {
                // Update quantity of existing item
                this.items[existingItemIndex].quantity += quantity;
            } else {
                // Add new item
                this.items.push({
                    id: product.id,
                    name: product.name,
                    price: product.salePrice || product.base_price || product.price,
                    image: Array.isArray(product.images) ? product.images[0] : product.images,
                    quantity: quantity,
                    options: options
                });
            }

            this.saveCart();
            Alpine.store('ui').showCartNotification();
        },

        updateItemQuantity(index, quantity) {
            if (index >= 0 && index < this.items.length) {
                if (quantity <= 0) {
                    this.removeItem(index);
                } else {
                    this.items[index].quantity = quantity;
                    this.saveCart();
                }
            }
        },

        removeItem(index) {
            if (index >= 0 && index < this.items.length) {
                this.items.splice(index, 1);
                this.saveCart();
            }
        },

        clearCart() {
            this.items = [];
            this.saveCart();
        },

        getTotalItems() {
            return this.items.reduce((total, item) => total + item.quantity, 0);
        },

        getTotalPrice() {
            return this.items.reduce((total, item) => total + (item.price * item.quantity), 0);
        },

        getFormattedTotal() {
            return '$' + this.getTotalPrice().toFixed(2);
        }
    });

    /**
     * Utility functions for formatting
     */
    Alpine.data('utilities', () => {
        return {
            formatPrice(price) {
                return '$' + parseFloat(price).toFixed(2);
            },

            formatOptionName(name) {
                return name.replace(/_/g, ' ').replace(/\b\w/g, char => char.toUpperCase());
            },

            formatFeatureKey(key) {
                return key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');
            },

            // Get variant stock for products page
            getVariantStock(product) {
                if (!product) return 0;

                // If product has variants, sum up all variants stock
                if (product.option_variants_stock) {
                    return Object.values(product.option_variants_stock).reduce((sum, stock) => sum + stock, 0);
                }

                // Otherwise return product stock
                return product.stock || 0;
            },

            // Check if option value is available (for products page)
            isOptionValueAvailable(product, optionType, optionValue) {
                if (!product || !product.hasVariants) return true;

                // If product has option_variants_stock, check availability
                if (product.option_variants_stock) {
                    // For simplicity, if a variant exists with stock, it's available
                    for (const [key, stock] of Object.entries(product.option_variants_stock)) {
                        if (key.includes(optionValue) && stock > 0) {
                            return true;
                        }
                    }
                    return false;
                }

                return true;
            }
        };
    });

    Alpine.store('urlUtils', {
        // Find a product by slug
        findProductBySlug(slug) {
            return PRODUCTS.find(product => product.slug === slug);
        },

        // Find a category by slug
        findCategoryBySlug(slug) {
            return CATEGORIES.find(category => category.slug === slug);
        },

        // Get URL parameter
        getUrlParam(name) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(name);
        },

        // Update URL with slug without page reload
        updateUrlParameter(key, value) {
            const url = new URL(window.location);
            if (value) {
                url.searchParams.set(key, value);
            } else {
                url.searchParams.delete(key);
            }
            window.history.pushState({}, '', url);
        }
    });
});





File Path: C:\xampp\htdocs\subdomain-pinkjeans\js/cart-page.js

// cart-page.js - Alpine.js Components for Cart Page
document.addEventListener('alpine:init', () => {
    /**
     * Shopping Cart Page Component
     * Handles cart page functionality
     */
    Alpine.data('cartPage', () => {
        return {
            // State
            couponCode: '',
            shippingMethod: 'standard',
            estimatedDelivery: '',

            init() {
                this.updateEstimatedDelivery();
            },

            // Shipping methods and their costs
            shippingMethods: {
                standard: {
                    name: 'Standard Shipping',
                    cost: 4.99,
                    days: '3-5'
                },
                express: {
                    name: 'Express Shipping',
                    cost: 9.99,
                    days: '1-2'
                },
                free: {
                    name: 'Free Shipping',
                    cost: 0,
                    days: '5-7',
                    minimumOrder: 50
                }
            },

            // Get current shipping method details
            getCurrentShippingMethod() {
                return this.shippingMethods[this.shippingMethod] || this.shippingMethods.standard;
            },

            // Update estimated delivery based on selected shipping method
            updateEstimatedDelivery() {
                const method = this.getCurrentShippingMethod();

                // Calculate delivery date range
                const today = new Date();
                const minDays = parseInt(method.days.split('-')[0]);
                const maxDays = parseInt(method.days.split('-')[1]);

                const minDate = new Date(today);
                minDate.setDate(today.getDate() + minDays);

                const maxDate = new Date(today);
                maxDate.setDate(today.getDate() + maxDays);

                // Format dates
                const options = { month: 'short', day: 'numeric' };
                const minDateStr = minDate.toLocaleDateString('en-US', options);
                const maxDateStr = maxDate.toLocaleDateString('en-US', options);

                this.estimatedDelivery = `${minDateStr} - ${maxDateStr}`;
            },

            // Check if the cart qualifies for free shipping
            qualifiesForFreeShipping() {
                const freeShippingMinimum = this.shippingMethods.free.minimumOrder;
                return Alpine.store('cart').getTotalPrice() >= freeShippingMinimum;
            },

            // Apply coupon (this would typically check with a backend)
            applyCoupon() {
                if (!this.couponCode.trim()) {
                    alert('Please enter a coupon code');
                    return;
                }

                // This is just a placeholder. In a real app, you'd validate with the server
                if (this.couponCode.toLowerCase() === 'welcome10') {
                    alert('Coupon applied: 10% discount!');
                    // Implementation would vary based on how you handle discounts
                } else {
                    alert('Invalid coupon code');
                }
            },

            // Get final total including shipping
            getFinalTotal() {
                const subtotal = Alpine.store('cart').getTotalPrice();
                const shippingCost = this.qualifiesForFreeShipping() ? 0 : this.getCurrentShippingMethod().cost;

                // Add tax calculation if needed
                return subtotal + shippingCost;
            },

            // Format currency
            formatPrice(price) {
                return '$' + parseFloat(price).toFixed(2);
            },

            // Proceed to checkout
            proceedToCheckout() {
                // Save shipping method to localStorage or session
                localStorage.setItem('selectedShippingMethod', this.shippingMethod);

                // Redirect to checkout page
                window.location.href = 'checkout.html';
            }
        };
    });

    /**
     * WhatsApp Checkout Component
     * Handles generating and sending cart details via WhatsApp
     */
    Alpine.data('whatsappCheckout', (config = {}) => {
        return {
            // Configuration with defaults
            phoneNumber: config.phoneNumber || Alpine.store('ui').whatsAppNumber,
            includeItemPrice: config.includeItemPrice !== false,
            includeSubtotal: config.includeSubtotal !== false,
            includeTotal: config.includeTotal !== false,
            customGreeting: config.customGreeting || 'Hello, I would like to place the following order:',
            customClosing: config.customClosing || 'Please contact me to confirm my order.',

            // Generate the complete order message
            generateOrderText() {
                const cart = Alpine.store('cart');

                // Start with greeting
                let message = `${this.customGreeting}\n\n`;

                // Add cart items
                if (cart.items.length === 0) {
                    return this.customGreeting;
                }

                // Add items with details
                cart.items.forEach((item, index) => {
                    message += `• ${item.name}`;

                    // Add options if available
                    if (item.options && Object.keys(item.options).length > 0) {
                        const optionsText = Object.entries(item.options)
                            .map(([key, value]) => `${key}: ${value}`)
                            .join(', ');
                        message += ` (${optionsText})`;
                    }

                    // Add quantity and price
                    if (this.includeItemPrice) {
                        message += ` - ${item.quantity} × $${item.price.toFixed(2)}`;
                    } else {
                        message += ` - Qty: ${item.quantity}`;
                    }

                    message += '\n';
                });

                // Add subtotal
                if (this.includeSubtotal) {
                    message += `\nSubtotal: $${cart.getTotalPrice().toFixed(2)}`;
                }

                // Add shipping method if available in cart page data
                if (this.$el.closest('[x-data="cartPage"]')) {
                    const cartPage = Alpine.bound(this.$el.closest('[x-data="cartPage"]'), 'cartPage');
                    if (cartPage && cartPage.shippingMethod) {
                        const method = cartPage.getCurrentShippingMethod();
                        message += `\nShipping: ${method.name} ($${method.cost.toFixed(2)})`;
                        message += `\nEstimated Delivery: ${cartPage.estimatedDelivery}`;
                    }
                }

                // Add total
                if (this.includeTotal) {
                    // If shipping is available, include it in total
                    let totalPrice = cart.getTotalPrice();
                    if (this.$el.closest('[x-data="cartPage"]')) {
                        const cartPage = Alpine.bound(this.$el.closest('[x-data="cartPage"]'), 'cartPage');
                        if (cartPage && cartPage.shippingMethod) {
                            const shipping = cartPage.getCurrentShippingMethod();
                            if (!cartPage.qualifiesForFreeShipping()) {
                                totalPrice += shipping.cost;
                            }
                        }
                    }
                    message += `\nTotal: $${totalPrice.toFixed(2)}`;
                }

                // Add closing message
                message += `\n\n${this.customClosing}`;

                return message;
            },

            // Send order via WhatsApp
            sendOrder() {
                const message = this.generateOrderText();
                const encodedMessage = encodeURIComponent(message);
                window.open(`https://wa.me/${this.phoneNumber}?text=${encodedMessage}`, '_blank');
            }
        };
    });
});





File Path: C:\xampp\htdocs\subdomain-pinkjeans\js/product-page.js

// product-page.js - Alpine.js Components for Product Detail Page
document.addEventListener('alpine:init', () => {

    Alpine.store('productData', {
        currentProduct: null,

        init() {
            // Get the slug from URL
            const slug = new URLSearchParams(window.location.search).get('slug');
            const id = new URLSearchParams(window.location.search).get('id');

            // Try to load by slug first (preferred)
            if (slug && typeof PRODUCTS !== 'undefined') {
                this.currentProduct = PRODUCTS.find(p => p.slug === slug);
            }

            // Fallback to ID if needed (for backward compatibility)
            if (!this.currentProduct && id && typeof PRODUCTS !== 'undefined') {
                const productId = parseInt(id);
                this.currentProduct = PRODUCTS.find(p => p.id === productId);

                // If found by ID, redirect to slug URL for SEO
                if (this.currentProduct) {
                    window.history.replaceState(
                        {},
                        document.title,
                        `product.html?slug=${this.currentProduct.slug}`
                    );
                }
            }

            // Set default product if nothing found
            if (!this.currentProduct && typeof PRODUCTS !== 'undefined' && PRODUCTS.length > 0) {
                this.currentProduct = PRODUCTS[0];
            }

            // Update title and breadcrumb
            if (this.currentProduct) {
                document.title = `${this.currentProduct.name} - pinkJeans`;
            }
        }
    });

    /**
     * Product Detail Component
     * Handles product variants, options selection, pricing, and stock
     */
    Alpine.data('productDetail', (config = {}) => {
        return {
            product: config.product || {},
            selectedOptions: {},
            quantity: 1,

            init() {
                // Initialize default option selections
                if (this.product.options) {
                    Object.keys(this.product.options).forEach(optionName => {
                        if (this.product.options[optionName].length > 0) {
                            this.selectedOptions[optionName] = this.product.options[optionName][0];
                        }
                    });
                }
            },

            // Utility functions
            formatPrice(price) {
                return '$' + parseFloat(price).toFixed(2);
            },

            formatOptionName(name) {
                return name.replace(/_/g, ' ').replace(/\b\w/g, char => char.toUpperCase());
            },

            formatFeatureKey(key) {
                return key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');
            },

            // Get current variant key based on selected options
            getVariantKey() {
                if (!this.product.hasVariants) return null;

                // Get option values in the order of options
                const optionKeys = Object.keys(this.product.options);
                const optionValues = optionKeys.map(key => this.selectedOptions[key]);

                // Join them with | separator
                return optionValues.join('|');
            },

            // Check if current variant is in stock
            isVariantInStock() {
                if (!this.product.hasVariants) {
                    return this.product.stock > 0;
                }

                const variantKey = this.getVariantKey();
                if (variantKey && this.product.option_variants_stock) {
                    return (this.product.option_variants_stock[variantKey] || 0) > 0;
                }

                return this.product.stock > 0;
            },

            // Get stock level for current variant
            getVariantStock() {
                if (!this.product.hasVariants) {
                    return this.product.stock;
                }

                const variantKey = this.getVariantKey();
                if (variantKey && this.product.option_variants_stock) {
                    return this.product.option_variants_stock[variantKey] || 0;
                }

                return 0;
            },

            // Get price for current variant
            getVariantPrice() {
                let price = this.product.base_price || this.product.price || 0;

                // Apply price adjustments based on selected options
                if (this.product.option_price_adjustments) {
                    Object.entries(this.selectedOptions).forEach(([optionName, optionValue]) => {
                        if (
                            this.product.option_price_adjustments[optionName] &&
                            this.product.option_price_adjustments[optionName][optionValue]
                        ) {
                            price += this.product.option_price_adjustments[optionName][optionValue];
                        }
                    });
                }

                return price;
            },

            // Get shipping cost for current variant
            getVariantShippingCost() {
                // Check if shipping is free
                if (this.product.free_shipping) {
                    return 0;
                }

                let shippingCost = this.product.base_shipping_cost || 0;

                // Apply shipping adjustments based on selected options
                if (this.product.option_shipping_adjustments) {
                    Object.entries(this.selectedOptions).forEach(([optionName, optionValue]) => {
                        if (
                            this.product.option_shipping_adjustments[optionName] &&
                            this.product.option_shipping_adjustments[optionName][optionValue] !== undefined
                        ) {
                            shippingCost += this.product.option_shipping_adjustments[optionName][optionValue];
                        }
                    });
                }

                // If an option adjustment makes shipping negative or 0, it's free
                return Math.max(0, shippingCost);
            },

            // Get product weight (with overrides)
            getProductWeight() {
                let weight = {...this.product.weight};

                if (this.product.option_dimension_overrides) {
                    Object.entries(this.selectedOptions).forEach(([optionName, optionValue]) => {
                        if (
                            this.product.option_dimension_overrides[optionName] &&
                            this.product.option_dimension_overrides[optionName][optionValue] &&
                            this.product.option_dimension_overrides[optionName][optionValue].weight
                        ) {
                            weight = this.product.option_dimension_overrides[optionName][optionValue].weight;
                        }
                    });
                }

                return weight;
            },

            // Get product dimensions (with overrides)
            getProductDimensions() {
                let dimensions = {...this.product.dimensions};

                if (this.product.option_dimension_overrides) {
                    Object.entries(this.selectedOptions).forEach(([optionName, optionValue]) => {
                        if (
                            this.product.option_dimension_overrides[optionName] &&
                            this.product.option_dimension_overrides[optionName][optionValue] &&
                            this.product.option_dimension_overrides[optionName][optionValue].dimensions
                        ) {
                            dimensions = this.product.option_dimension_overrides[optionName][optionValue].dimensions;
                        }
                    });
                }

                return dimensions;
            },

            // Update variant information
            updateVariantInfo() {
                // This triggers reactivity and updates the UI
                this.selectedOptions = {...this.selectedOptions};

                // Update the product viewer
                const productViewer = document.querySelector('[x-data*="productViewer"]');
                if (productViewer && this.product.hasVariants) {
                    const viewerData = Alpine.$data(productViewer);
                    if (viewerData) {
                        viewerData.selectedOptions = {...this.selectedOptions};
                        viewerData.selectedImage = ''; // Force image update
                    }
                }
            },

            // Check if an option value leads to available stock
            isOptionValueAvailable(optionType, optionValue) {
                if (!this.product || !this.product.hasVariants) return true;

                // Create a temporary selection with the current options
                const tempSelection = {...this.selectedOptions};
                tempSelection[optionType] = optionValue;

                // Create variant key
                const optionKeys = Object.keys(this.product.options);
                const optionValues = optionKeys.map(key => tempSelection[key]);
                const variantKey = optionValues.join('|');

                // Check if this combination has stock
                return (this.product.option_variants_stock[variantKey] || 0) > 0;
            },

            // Add to cart
            addToCart() {
                Alpine.store('cart').addItem(
                    this.product,
                    this.quantity,
                    this.selectedOptions
                );
            },

            // Increase quantity
            increaseQuantity() {
                const maxStock = this.getVariantStock();
                if (this.quantity < maxStock) {
                    this.quantity++;
                }
            },

            // Decrease quantity
            decreaseQuantity() {
                if (this.quantity > 1) {
                    this.quantity--;
                }
            }
        };
    });

    /**
     * Product Viewer Component
     * Handles product image viewing with zoom functionality
     */
    Alpine.data('productViewer', function(product) {
        return {
            product: product,
            selectedImage: '',
            selectedOptions: {},
            isScrollLeftEnd: true,
            isScrollRightEnd: false,

            // Image zoom properties
            zoomed: false,
            isTouchDevice: false,
            scale: 2,
            origin: '50% 50%',
            panX: 0,
            panY: 0,
            minPanX: 0,
            maxPanX: 0,
            minPanY: 0,
            maxPanY: 0,
            dragStartX: 0,
            dragStartY: 0,
            dragging: false,
            lastTap: 0,
            imgStyle: '',

            init() {
                if (this.product) {
                    // Initialize selected image
                    this.selectedImage = this.product.images && this.product.images.length > 0
                        ? this.product.images[0]
                        : '';

                    // Initialize selected options
                    this.selectedOptions = {};
                    if (this.product.options) {
                        for (const option in this.product.options) {
                            if (this.product.options[option] && this.product.options[option].length > 0) {
                                this.selectedOptions[option] = this.product.options[option][0];
                            }
                        }
                    }

                    // Initialize scroll position check
                    setTimeout(() => {
                        this.checkScrollPosition();
                    }, 100);

                    // Initialize zoom features
                    this.isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
                    this.imgStyle = 'transform: scale(1); transform-origin: 50% 50%;';
                }
            },

            getVariantKey() {
                if (!this.product.hasVariants) return null;

                const optionKeys = Object.keys(this.product.options);
                const optionValues = optionKeys.map(key => this.selectedOptions[key]);

                return optionValues.join('|');
            },

            hasThumbnails() {
                let count = 0;
                // Count main images
                count += this.product.images ? this.product.images.length : 0;

                // Count option images
                if (this.product.option_images) {
                    for (const optionType in this.product.option_images) {
                        for (const optionValue in this.product.option_images[optionType]) {
                            count += this.product.option_images[optionType][optionValue].length;
                        }
                    }
                }

                // Count variant images
                if (this.product.variant_images) {
                    for (const key in this.product.variant_images) {
                        if (Array.isArray(this.product.variant_images[key])) {
                            count += this.product.variant_images[key].length;
                        } else {
                            count += 1;
                        }
                    }
                }

                return count > 1;
            },

            getSelectedImage() {
                if (!this.product) return '';

                try {
                    // If an image has been manually selected, use that
                    if (this.selectedImage) {
                        return this.selectedImage;
                    }

                    // Check for variant-specific images
                    const variantKey = this.getVariantKey();
                    if (variantKey && this.product.variant_images && this.product.variant_images[variantKey]) {
                        const variantImage = this.product.variant_images[variantKey];
                        return Array.isArray(variantImage) ? variantImage[0] : variantImage;
                    }

                    // Check for option-specific images
                    if (this.product.option_images) {
                        for (const [option, value] of Object.entries(this.selectedOptions)) {
                            if (
                                this.product.option_images[option] &&
                                this.product.option_images[option][value] &&
                                this.product.option_images[option][value].length > 0
                            ) {
                                return this.product.option_images[option][value][0];
                            }
                        }
                    }

                    // Default to first product image
                    return this.product.images && this.product.images.length > 0
                        ? this.product.images[0]
                        : '';
                } catch (error) {
                    console.error("Error in getSelectedImage:", error);
                    return this.product.images && this.product.images.length > 0
                        ? this.product.images[0]
                        : '';
                }
            },

            selectImage(image) {
                this.selectedImage = image;
                this.resetZoom();
            },

            selectOption(option, value) {
                this.selectedOptions[option] = value;
                this.selectedImage = '';
                this.resetZoom();

                this.$nextTick(() => {
                    this.scrollToOptionThumbnails();
                });
            },

            // Thumbnail scrolling
            scrollThumbnails(direction) {
                const container = this.$refs.thumbnailsContainer;
                if (!container) return;

                const scrollAmount = container.clientWidth * 0.75;
                if (direction === 'left') {
                    container.scrollLeft -= scrollAmount;
                } else {
                    container.scrollLeft += scrollAmount;
                }

                setTimeout(() => {
                    this.checkScrollPosition();
                }, 100);
            },

            checkScrollPosition() {
                const container = this.$refs.thumbnailsContainer;
                if (!container) return;

                this.isScrollLeftEnd = container.scrollLeft <= 0;
                this.isScrollRightEnd = container.scrollLeft + container.clientWidth >= container.scrollWidth - 5;
            },

            scrollToOptionThumbnails() {
                const container = this.$refs.thumbnailsContainer;
                if (!container) return;

                // For now, just check scroll position
                this.checkScrollPosition();
            },

            // Image Zoom Functionality
            mouseMove(e) {
                if (!this.zoomed || this.isTouchDevice) return;

                const img = this.$refs.mainImage;
                if (!img) return;

                const rect = img.getBoundingClientRect();
                const x = ((e.clientX - rect.left) / rect.width) * 100;
                const y = ((e.clientY - rect.top) / rect.height) * 100;

                this.origin = `${x}% ${y}%`;
                this.updateZoomStyle();
            },

            mouseEnter(e) {
                if (this.isTouchDevice) return;
                this.zoomed = true;
                this.mouseMove(e);
            },

            mouseLeave() {
                if (this.isTouchDevice) return;
                this.zoomed = false;
                this.resetZoom();
            },

            // Mobile zoom and drag handlers
            touchStart(e) {
                if (e.touches.length > 1) return;

                const now = Date.now();
                // Double tap detection
                if (now - this.lastTap < 300) {
                    // Toggle zoom state
                    this.zoomed = !this.zoomed;
                    if (this.zoomed) {
                        // Set zoom origin to touch point
                        const img = this.$refs.mainImage;
                        if (!img) return;

                        const rect = img.getBoundingClientRect();
                        const touch = e.touches[0];
                        const x = ((touch.clientX - rect.left) / rect.width) * 100;
                        const y = ((touch.clientY - rect.top) / rect.height) * 100;

                        this.origin = `${x}% ${y}%`;
                        this.panX = 0;
                        this.panY = 0;
                        this.calculatePanLimits();
                        this.updateZoomStyle();
                    } else {
                        this.resetZoom();
                    }
                    e.preventDefault();
                } else if (this.zoomed) {
                    // Start dragging
                    this.dragging = true;
                    this.dragStartX = e.touches[0].clientX - this.panX;
                    this.dragStartY = e.touches[0].clientY - this.panY;
                }

                this.lastTap = now;
            },

            touchMove(e) {
                if (!this.zoomed || !this.dragging || e.touches.length > 1) return;

                const touchX = e.touches[0].clientX;
                const touchY = e.touches[0].clientY;

                this.panX = touchX - this.dragStartX;
                this.panY = touchY - this.dragStartY;

                // Limit panning to within image bounds
                this.panX = Math.max(this.minPanX, Math.min(this.maxPanX, this.panX));
                this.panY = Math.max(this.minPanY, Math.min(this.maxPanY, this.panY));

                this.updateZoomStyle();
                e.preventDefault();
            },

            touchEnd() {
                this.dragging = false;
            },

            // Helper functions for zoom behavior
            updateZoomStyle() {
                if (!this.zoomed) {
                    this.imgStyle = 'transform: scale(1); transform-origin: 50% 50%; transition: transform 0.3s ease;';
                    return;
                }

                if (this.isTouchDevice) {
                    const transform = `scale(${this.scale}) translate(${this.panX}px, ${this.panY}px)`;
                    this.imgStyle = `transform: ${transform}; transform-origin: ${this.origin}; transition: none;`;
                } else {
                    this.imgStyle = `transform: scale(${this.scale}); transform-origin: ${this.origin}; transition: transform-origin 0.1s ease;`;
                }
            },

            resetZoom() {
                this.zoomed = false;
                this.panX = 0;
                this.panY = 0;
                this.origin = '50% 50%';
                this.updateZoomStyle();
            },

            calculatePanLimits() {
                const img = this.$refs.mainImage;
                if (!img) return;

                const rect = img.getBoundingClientRect();
                // Calculate how much the image can be panned
                this.maxPanX = (rect.width * (this.scale - 1)) / 2;
                this.minPanX = -this.maxPanX;
                this.maxPanY = (rect.height * (this.scale - 1)) / 2;
                this.minPanY = -this.maxPanY;
            },

            handleImageError(event) {
                event.target.src = "https://via.placeholder.com/400x300?text=Image+Not+Available";
            }
        };
    });

    /**
     * WhatsApp Product Inquiry Component
     * Handles product inquiries via WhatsApp
     */
    Alpine.data('whatsappInquiry', (config = {}) => {
        return {
            // Configuration with defaults
            phoneNumber: config.phoneNumber || Alpine.store('ui').whatsAppNumber,
            buttonText: config.buttonText || 'Ask about this product',

            // Send inquiry about current product
            inquireAboutProduct() {
                // Get product information from parent component
                const productDetail = this.$el.closest('[x-data*="productDetail"]');
                if (!productDetail) return this.sendSimpleInquiry();

                const productData = Alpine.$data(productDetail);
                if (!productData) return this.sendSimpleInquiry();

                const product = productData.product;
                const quantity = productData.quantity;
                const selectedOptions = productData.selectedOptions;

                // Create the message
                let message = `Hello, I'm interested in: ${product.name}`;

                // Add quantity if more than 1
                if (quantity > 1) {
                    message += ` (Quantity: ${quantity})`;
                }

                // Add price information
                const variantPrice = productData.getVariantPrice();
                message += `\nPrice: $${variantPrice.toFixed(2)}`;

                // Add selected options if any
                if (selectedOptions && Object.keys(selectedOptions).length > 0) {
                    message += '\nSelected options:';
                    Object.entries(selectedOptions).forEach(([option, value]) => {
                        message += `\n- ${option}: ${value}`;
                    });
                }

                // Add shipping information
                const shippingCost = productData.getVariantShippingCost();
                message += `\nShipping: ${shippingCost === 0 ? 'Free' : '$' + shippingCost.toFixed(2)}`;

                // Add stock status
                const stock = productData.getVariantStock();
                message += `\nStock status: ${stock > 0 ? `${stock} available` : 'Out of stock'}`;

                // Add product URL if available
                const currentUrl = window.location.href;
                message += `\n\nProduct link: ${currentUrl}`;

                // Add closing message
                message += '\n\nCould you provide me with more information about this product?';

                // Send the message
                this.sendWhatsAppMessage(message);
            },

            // Simple inquiry without product details
            sendSimpleInquiry(customMessage = 'Hello, I have a question about your products.') {
                this.sendWhatsAppMessage(customMessage);
            },

            // Helper method to send WhatsApp message
            sendWhatsAppMessage(message) {
                const encodedMessage = encodeURIComponent(message);
                window.open(`https://wa.me/${this.phoneNumber}?text=${encodedMessage}`, '_blank');
            }
        };
    });
});







File Path: C:\xampp\htdocs\subdomain-pinkjeans\js/products-page.js

document.addEventListener('alpine:init', () => {
    Alpine.data('productCatalog', () => {
        return {
            searchQuery: '',
            selectedCategory: null,
            selectedCategorySlug: null,
            view: 'grid',
            sortBy: 'featured',
            priceRanges: [],
            showNew: false,
            showSale: false,
            inStock: false,
            mobileFiltersOpen: false,

            productData: [],
            categoryData: [],

            init() {
                this.$nextTick(() => {
                    if (typeof PRODUCTS !== 'undefined') {
                        this.productData = PRODUCTS;
                    }
                    if (typeof CATEGORIES !== 'undefined') {
                        this.categoryData = CATEGORIES;
                    }

                    const urlParams = new URLSearchParams(window.location.search);
                    const categorySlug = urlParams.get('category');

                    if (categorySlug) {
                        const category = this.categoryData.find(cat => cat.slug === categorySlug);
                        if (category) {
                            this.selectedCategory = category.id;
                            this.selectedCategorySlug = categorySlug;
                        }
                    } else {
                        const categoryId = urlParams.get('categoryId');
                        if (categoryId) {
                            this.selectedCategory = parseInt(categoryId);
                            const category = this.categoryData.find(cat => cat.id === parseInt(categoryId));
                            if (category) {
                                this.selectedCategorySlug = category.slug;
                                window.history.replaceState(
                                    {},
                                    document.title,
                                    `products.html?category=${category.slug}`
                                );
                            }
                        }
                    }

                    const filterParam = urlParams.get('filter');
                    if (filterParam) {
                        switch (filterParam) {
                            case 'new':
                                this.showNew = true;
                                break;
                            case 'sale':
                                this.showSale = true;
                                break;
                            case 'featured':
                                this.sortBy = 'featured';
                                break;
                        }
                    }

                    const savedView = localStorage.getItem('preferredView');
                    if (savedView) {
                        this.view = savedView;
                    }
                });
            },

            selectCategoryBySlug(slug) {
                this.selectedCategorySlug = slug;
                const category = this.categoryData.find(cat => cat.slug === slug);
                this.selectedCategory = category ? category.id : null;

                const url = new URL(window.location);
                if (slug) {
                    url.searchParams.set('category', slug);
                } else {
                    url.searchParams.delete('category');
                }
                window.history.pushState({}, '', url);
            },

            getUrlParameter(name) {
                const urlParams = new URLSearchParams(window.location.search);
                return urlParams.get(name);
            },

            getCategoryName(categoryId) {
                const category = this.categoryData.find(cat => cat.id === categoryId);
                return category ? category.name : 'All Products';
            },

            saveViewPreference() {
                localStorage.setItem('preferredView', this.view);
            },

            setView(viewType) {
                this.view = viewType;
                this.saveViewPreference();
            },

            getAllDescendantCategoryIds(parentId) {
                let ids = [];
                this.categoryData.forEach(cat => {
                    if (cat.parent_id === parentId) {
                        ids.push(cat.id);
                        ids = ids.concat(this.getAllDescendantCategoryIds(cat.id));
                    }
                });
                return ids;
            },

            getFilteredProducts() {
                let categoryIdsToCheck = [];
                if (this.selectedCategory !== null) {
                    categoryIdsToCheck = [
                        this.selectedCategory,
                        ...this.getAllDescendantCategoryIds(this.selectedCategory)
                    ];
                }

                let filtered = this.productData.filter(product => {
                    const categoryMatch = this.selectedCategory === null ||
                        (Array.isArray(product.categories) &&
                            product.categories.some(catId => categoryIdsToCheck.includes(catId)));

                    const searchMatch = this.searchQuery === '' ||
                        (product.name && product.name.toLowerCase().includes(this.searchQuery.toLowerCase())) ||
                        (product.description && product.description.toLowerCase().includes(this.searchQuery.toLowerCase()));

                    let priceMatch = true;
                    if (this.priceRanges.length > 0) {
                        const price = product.salePrice || product.base_price || product.price;
                        priceMatch = this.priceRanges.some(range => {
                            if (range === '200+') {
                                return price >= 200;
                            }
                            const [min, max] = range.split('-').map(Number);
                            return price >= min && price <= max;
                        });
                    }

                    const newMatch = !this.showNew || product.isNew;
                    const saleMatch = !this.showSale || product.isOnSale;
                    const stockMatch = !this.inStock || (product.hasVariants ? product.totalVariantStock > 0 : product.stock > 0);

                    return categoryMatch && searchMatch && priceMatch && newMatch && saleMatch && stockMatch;
                });

                switch (this.sortBy) {
                    case 'price-asc':
                        filtered.sort((a, b) =>
                            (a.salePrice || a.base_price || a.price) - (b.salePrice || b.base_price || b.price));
                        break;
                    case 'price-desc':
                        filtered.sort((a, b) =>
                            (b.salePrice || b.base_price || b.price) - (a.salePrice || a.base_price || a.price));
                        break;
                    case 'name':
                        filtered.sort((a, b) => a.name.localeCompare(b.name));
                        break;
                    case 'newest':
                        filtered.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
                        break;
                    case 'featured':
                    default:
                        filtered.sort((a, b) => {
                            if (a.isFeatured && !b.isFeatured) return -1;
                            if (!a.isFeatured && b.isFeatured) return 1;
                            if (a.isNew && !b.isNew) return -1;
                            if (!a.isNew && b.isNew) return 1;
                            return 0;
                        });
                }

                return filtered;
            },

            clearFilters() {
                this.searchQuery = '';
                this.selectedCategory = null;
                this.selectedCategorySlug = null;
                this.priceRanges = [];
                this.showNew = false;
                this.showSale = false;
                this.inStock = false;

                const url = new URL(window.location);
                url.searchParams.delete('category');
                window.history.pushState({}, '', url);
            }
        };
    });
});




-------- the theme look alike that you should build the store with similar design guideline -----
sample html/tailwind as standard to create the new store details, this is just for representation purpose do not use any of it's data/javascript. You'll notice some of alpine codes DO NOT USE THEM OR COPY THEM i WANT COMPLETE IGNORANCING THOSE AND FOLLOW THE ORIGINAL PROMPT ABOUT ALPINE. Just follow the overall approach ONLY in terms of the overall design:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SERENE | Curated Simplicity</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Montserrat', 'sans-serif'],
                        serif: ['Cormorant Garamond', 'serif']
                    },
                    colors: {
                        sand: {
                            50: '#f9f7f5',
                            100: '#f0ece7',
                            200: '#e2dcd3',
                            300: '#d1c7ba',
                            400: '#baa898',
                            500: '#a89079',
                            600: '#9c8369',
                            700: '#816c58',
                            800: '#6b5a4b',
                            900: '#584b3f',
                        },
                    }
                }
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script src="../productsTheme.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@300;400;500;600;700&family=Montserrat:wght@200;300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="bg-white text-sand-900 font-sans">
<div x-data="{
    products: PRODUCTS,
    search: '',
    mobileMenu: false,
    cart: [],
    showProduct: null,
    get filteredProducts() {
      if (!this.search.trim()) return this.products;
      const searchLower = this.search.toLowerCase();
      return this.products.filter(p =>
        (p.name && p.name.toLowerCase().includes(searchLower)) ||
        (p.description && p.description.toLowerCase().includes(searchLower))
      );
    },
    viewProduct(product) {
      this.showProduct = product;
      window.scrollTo(0, 0);
      document.body.classList.add('overflow-hidden');
    },
    closeProductView() {
      this.showProduct = null;
      document.body.classList.remove('overflow-hidden');
    }
  }">
    <!-- Product Detail Overlay -->
    <div x-show="showProduct"
         class="fixed inset-0 z-50 overflow-y-auto bg-white"
         x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="opacity-0"
         x-transition:enter-end="opacity-100"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="opacity-100"
         x-transition:leave-end="opacity-0">
        <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
            <button @click="closeProductView" class="absolute top-4 right-4 text-sand-400 hover:text-sand-900 transition">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

            <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 mt-8">
                <div>
                    <div class="aspect-w-3 aspect-h-4 bg-sand-50">
                        <img :src="showProduct?.image || 'https://via.placeholder.com/600x800?text=Product'"
                             :alt="showProduct?.name"
                             class="w-full h-full object-cover">
                    </div>
                </div>

                <div class="flex flex-col justify-center">
                    <h2 class="font-serif text-4xl font-light mb-2" x-text="showProduct?.name"></h2>
                    <div class="flex items-center mb-6">
                        <template x-for="i in 5">
                            <svg xmlns="http://www.w3.org/2000/svg" :class="i <= (showProduct?.rating || 0) ? 'text-sand-800' : 'text-sand-200'" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                        </template>
                        <span class="ml-2 text-sm text-sand-500" x-text="`${showProduct?.rating || 0} reviews`"></span>
                    </div>

                    <p class="text-2xl font-light mb-8" x-text="'$' + (showProduct?.price || 0).toFixed(2)"></p>

                    <div class="prose prose-sand mb-8 max-w-none">
                        <p class="font-light text-sand-700" x-text="showProduct?.description"></p>
                    </div>

                    <div class="mb-8">
                        <h3 class="text-xs uppercase tracking-widest mb-3 font-medium">Variations</h3>
                        <div class="flex flex-wrap gap-2">
                            <button class="w-10 h-10 rounded-full bg-black border-2 border-white ring-1 ring-black focus:outline-none"></button>
                            <button class="w-10 h-10 rounded-full bg-sand-200 border-2 border-white hover:ring-1 hover:ring-sand-300 focus:outline-none"></button>
                            <button class="w-10 h-10 rounded-full bg-stone-500 border-2 border-white hover:ring-1 hover:ring-stone-400 focus:outline-none"></button>
                        </div>
                    </div>

                    <div class="flex flex-wrap gap-4">
                        <button class="flex-1 bg-sand-900 hover:bg-black text-white py-3 px-8 uppercase tracking-widest text-sm font-light transition-colors">
                            Add to Cart
                        </button>
                        <button class="border border-sand-900 hover:bg-sand-50 py-3 px-6 uppercase tracking-widest text-sm font-light transition-colors">
                            Save
                        </button>
                    </div>

                    <div class="mt-12 pt-8 border-t border-sand-100">
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-center">
                            <div>
                                <span class="block text-xs uppercase tracking-widest mb-1 font-medium">Shipping</span>
                                <span class="text-sand-600 font-light">Free over $100</span>
                            </div>
                            <div>
                                <span class="block text-xs uppercase tracking-widest mb-1 font-medium">Returns</span>
                                <span class="text-sand-600 font-light">30 days</span>
                            </div>
                            <div>
                                <span class="block text-xs uppercase tracking-widest mb-1 font-medium">Sustainability</span>
                                <span class="text-sand-600 font-light">Ethically sourced</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Header -->
    <header class="sticky top-0 bg-white z-40 border-b border-sand-100">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-20 items-center">
                <!-- Logo -->
                <div class="flex-shrink-0">
                    <a href="#" class="font-serif text-3xl font-light tracking-wide text-sand-900">SERENE</a>
                </div>

                <!-- Desktop Nav -->
                <nav class="hidden md:flex items-center space-x-8">
                    <a href="#" class="text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">Home</a>
                    <a href="#shop" class="text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">Shop</a>
                    <a href="#about" class="text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">About</a>
                    <a href="#" class="text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">Journal</a>
                </nav>

                <!-- Actions -->
                <div class="flex items-center">
                    <button @click="$refs.searchInput.focus()" class="p-2 text-sand-400 hover:text-sand-900 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </button>
                    <a href="#" class="p-2 text-sand-400 hover:text-sand-900 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                        </svg>
                    </a>
                    <button @click="mobileMenu = !mobileMenu" class="p-2 ml-2 text-sand-400 hover:text-sand-900 transition-colors md:hidden">
                        <svg x-show="!mobileMenu" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                        <svg x-show="mobileMenu" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Mobile Menu -->
            <div x-show="mobileMenu" class="md:hidden py-4 border-t border-sand-100" x-transition>
                <nav class="flex flex-col space-y-3">
                    <a href="#" class="py-2 text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">Home</a>
                    <a href="#shop" class="py-2 text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">Shop</a>
                    <a href="#about" class="py-2 text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">About</a>
                    <a href="#" class="py-2 text-sand-900 hover:text-sand-500 uppercase tracking-widest text-xs font-medium transition-colors">Journal</a>
                </nav>
            </div>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="relative bg-sand-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-32 md:py-48">
            <div class="max-w-3xl">
                <p class="text-sm uppercase tracking-widest font-medium text-sand-500 mb-4">Spring / Summer Collection</p>
                <h1 class="font-serif text-5xl md:text-7xl font-light leading-tight mb-8">
                    Time for simplicity<br>
                    <span class="text-sand-400">and elegance</span>
                </h1>
                <p class="text-sand-600 text-lg md:text-xl font-light max-w-lg mb-10">
                    Discover our curated collection of essentials designed with mindful minimalism and timeless style.
                </p>
                <a href="#shop" class="inline-block bg-sand-900 hover:bg-black text-white py-3 px-10 uppercase tracking-widest text-sm font-light transition-colors">
                    Shop Now
                </a>
            </div>
        </div>
        <div class="absolute inset-y-0 right-0 w-1/3 hidden lg:block">
            <img src="https://images.unsplash.com/photo-1515886657613-9f3515b0c78f?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
                 alt="Elegant woman"
                 class="h-full w-full object-cover object-left">
        </div>
    </section>

    <!-- Search Section -->
    <section class="border-y border-sand-100 py-8">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="max-w-2xl mx-auto">
                <div class="relative">
                    <input
                            type="text"
                            x-model="search"
                            x-ref="searchInput"
                            placeholder="Search products..."
                            class="w-full py-3 px-4 pr-10 border-b border-sand-200 focus:border-sand-900 focus:outline-none bg-transparent placeholder-sand-400 font-light"
                    >
                    <div class="absolute inset-y-0 right-0 flex items-center pr-3 text-sand-400">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Product Categories -->
    <section class="py-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-16">
                <p class="text-sm uppercase tracking-widest font-medium text-sand-500 mb-2">Browse By Category</p>
                <h2 class="font-serif text-3xl md:text-4xl font-light">Curated Collections</h2>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <a href="#" class="group">
                    <div class="relative overflow-hidden">
                        <div class="aspect-w-1 aspect-h-1 bg-sand-50">
                            <img src="https://images.unsplash.com/photo-1565693413579-8a73ffc7de9e?ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80"
                                 alt="Apparel"
                                 class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                        </div>
                        <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-white/60">
                            <span class="font-serif text-2xl">Apparel</span>
                        </div>
                    </div>
                    <div class="text-center mt-4">
                        <h3 class="text-sm uppercase tracking-widest font-medium">Apparel</h3>
                        <p class="text-sand-500 font-light mt-1">Timeless essentials</p>
                    </div>
                </a>

                <a href="#" class="group">
                    <div class="relative overflow-hidden">
                        <div class="aspect-w-1 aspect-h-1 bg-sand-50">
                            <img src="https://images.unsplash.com/photo-1491637639811-60e2756cc1c7?ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80"
                                 alt="Accessories"
                                 class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                        </div>
                        <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-white/60">
                            <span class="font-serif text-2xl">Accessories</span>
                        </div>
                    </div>
                    <div class="text-center mt-4">
                        <h3 class="text-sm uppercase tracking-widest font-medium">Accessories</h3>
                        <p class="text-sand-500 font-light mt-1">Refined details</p>
                    </div>
                </a>

                <a href="#" class="group">
                    <div class="relative overflow-hidden">
                        <div class="aspect-w-1 aspect-h-1 bg-sand-50">
                            <img src="https://images.unsplash.com/photo-1462392246754-28dfa2df8e6b?ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80"
                                 alt="Home"
                                 class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                        </div>
                        <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-white/60">
                            <span class="font-serif text-2xl">Home</span>
                        </div>
                    </div>
                    <div class="text-center mt-4">
                        <h3 class="text-sm uppercase tracking-widest font-medium">Home</h3>
                        <p class="text-sand-500 font-light mt-1">Curated living</p>
                    </div>
                </a>
            </div>
        </div>
    </section>

    <!-- Featured Product -->
    <section class="py-20 bg-sand-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
                <div>
                    <div class="aspect-w-4 aspect-h-5 bg-white">
                        <img src="https://images.unsplash.com/photo-1593095948071-474c5cc2989d?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
                             alt="Featured Product"
                             class="w-full h-full object-cover">
                    </div>
                </div>

                <div>
                    <p class="text-sm uppercase tracking-widest font-medium text-sand-500 mb-4">Featured Product</p>
                    <h2 class="font-serif text-4xl font-light mb-4">Whey Protein Isolate</h2>
                    <div class="flex items-center mb-6">
                        <div class="flex">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-sand-800" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-sand-800" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-sand-800" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-sand-800" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-sand-800" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                        </div>
                        <span class="ml-2 text-sm text-sand-500">52 reviews</span>
                    </div>

                    <p class="text-2xl font-light mb-6">$39.99</p>

                    <p class="text-sand-700 font-light mb-8 max-w-xl">
                        High-quality protein with 27g per serving for muscle recovery and growth. Our premium formula is designed for maximum bioavailability and nutrient absorption.
                    </p>

                    <div class="mb-8">
                        <h3 class="text-xs uppercase tracking-widest mb-3 font-medium">Flavor</h3>
                        <div class="flex flex-wrap gap-3">
                            <button class="px-6 py-2 border border-sand-900 bg-sand-900 text-white uppercase tracking-widest text-xs">
                                Vanilla
                            </button>
                            <button class="px-6 py-2 border border-sand-300 hover:border-sand-900 uppercase tracking-widest text-xs">
                                Chocolate
                            </button>
                            <button class="px-6 py-2 border border-sand-300 hover:border-sand-900 uppercase tracking-widest text-xs">
                                Strawberry
                            </button>
                        </div>
                    </div>

                    <button class="bg-sand-900 hover:bg-black text-white py-3 px-10 uppercase tracking-widest text-sm font-light transition-colors">
                        Add to Cart
                    </button>
                </div>
            </div>
        </div>
    </section>

    <!-- Product List -->
    <section id="shop" class="py-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-16">
                <p class="text-sm uppercase tracking-widest font-medium text-sand-500 mb-2">Our Selection</p>
                <h2 class="font-serif text-3xl md:text-4xl font-light">Shop All Products</h2>
            </div>

            <!-- No Results Message -->
            <template x-if="search && filteredProducts.length === 0">
                <div class="text-center py-16">
                    <p class="text-sand-500 font-light text-lg mb-6">
                        No products match your search for "<span x-text="search"></span>".
                    </p>
                    <button @click="search = ''" class="text-sand-900 border-b border-sand-900 hover:text-sand-700 hover:border-sand-700 transition-colors">
                        Clear search
                    </button>
                </div>
            </template>

            <!-- Product Grid -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-16">
                <template x-for="product in filteredProducts" :key="product.id">
                    <div class="group cursor-pointer" @click="viewProduct(product)">
                        <div class="relative overflow-hidden">
                            <div class="aspect-w-1 aspect-h-1 bg-sand-50">
                                <img :src="product.image || 'https://via.placeholder.com/500x500?text=Product'"
                                     :alt="product.name"
                                     class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                            </div>
                            <div class="absolute top-0 left-0 m-4">
                                <template x-if="product.rating >= 4.5">
                    <span class="inline-block px-3 py-1 bg-white text-xs uppercase tracking-widest font-medium">
                      Best Seller
                    </span>
                                </template>
                            </div>
                        </div>

                        <div class="mt-6">
                            <h3 class="font-serif text-xl font-light" x-text="product.name"></h3>
                            <div class="flex items-center mt-2 mb-2">
                                <template x-for="i in 5">
                                    <svg xmlns="http://www.w3.org/2000/svg" :class="i <= product.rating ? 'text-sand-800' : 'text-sand-200'" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                    </svg>
                                </template>
                            </div>
                            <p class="font-light" x-text="'$' + product.price.toFixed(2)"></p>
                        </div>
                    </div>
                </template>
            </div>
        </div>
    </section>

    <!-- Journal Preview -->
    <section class="py-20 bg-sand-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-16">
                <p class="text-sm uppercase tracking-widest font-medium text-sand-500 mb-2">Our Journal</p>
                <h2 class="font-serif text-3xl md:text-4xl font-light">Stories & Ideas</h2>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <article class="group">
                    <a href="#" class="block">
                        <div class="relative overflow-hidden">
                            <div class="aspect-w-16 aspect-h-9 bg-white">
                                <img src="https://images.unsplash.com/photo-1465145177017-c5316a1b747b?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
                                     alt="Article 1"
                                     class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                            </div>
                        </div>
                        <div class="mt-6">
                            <p class="text-sand-500 font-light mb-2">April 15, 2025</p>
                            <h3 class="font-serif text-xl font-light mb-2">The Art of Mindful Living</h3>
                            <p class="text-sand-700 font-light">Discover the transformative power of mindfulness in everyday life.</p>
                        </div>
                    </a>
                </article>

                <article class="group">
                    <a href="#" class="block">
                        <div class="relative overflow-hidden">
                            <div class="aspect-w-16 aspect-h-9 bg-white">
                                <img src="https://images.unsplash.com/photo-1483985988355-763728e1935b?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
                                     alt="Article 2"
                                     class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                            </div>
                        </div>
                        <div class="mt-6">
                            <p class="text-sand-500 font-light mb-2">April 8, 2025</p>
                            <h3 class="font-serif text-xl font-light mb-2">The Capsule Wardrobe Guide</h3>
                            <p class="text-sand-700 font-light">Building a timeless wardrobe with fewer, better pieces.</p>
                        </div>
                    </a>
                </article>

                <article class="group">
                    <a href="#" class="block">
                        <div class="relative overflow-hidden">
                            <div class="aspect-w-16 aspect-h-9 bg-white">
                                <img src="https://images.unsplash.com/photo-1488190211105-8b0e65b80b4e?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
                                     alt="Article 3"
                                     class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105">
                            </div>
                        </div>
                        <div class="mt-6">
                            <p class="text-sand-500 font-light mb-2">April 1, 2025</p>
                            <h3 class="font-serif text-xl font-light mb-2">Creating a Serene Home Office</h3>
                            <p class="text-sand-700 font-light">Design tips for a productive and calming workspace.</p>
                        </div>
                    </a>
                </article>
            </div>

            <div class="text-center mt-12">
                <a href="#" class="inline-block border border-sand-900 hover:bg-sand-900 hover:text-white py-3 px-10 uppercase tracking-widest text-sm font-light transition-colors">
                    View All Posts
                </a>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section id="about" class="py-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
                <div>
                    <p class="text-sm uppercase tracking-widest font-medium text-sand-500 mb-4">Our Story</p>
                    <h2 class="font-serif text-4xl font-light mb-6">Curated with intention</h2>
                    <div class="space-y-6 text-sand-700 font-light">
                        <p>
                            Founded on the principles of thoughtful consumption and quality craftsmanship, SERENE was born from a desire to offer products that stand the test of time.
                        </p>
                        <p>
                            We believe in mindful living—choosing fewer, better things. Each item in our collection is carefully selected for its quality, functionality, and timeless design.
                        </p>
                        <p>
                            Our commitment to sustainability means we work with partners who share our values of ethical production and responsible resource use.
                        </p>
                    </div>
                    <a href="#" class="inline-block mt-8 border-b border-sand-900 hover:border-sand-500 hover:text-sand-500 transition-colors">
                        Learn more about our values
                    </a>
                </div>

                <div class="relative">
                    <div class="aspect-w-4 aspect-h-5 bg-sand-50">
                        <img src="https://images.unsplash.com/photo-1609619385002-f40f1df9b7eb?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
                             alt="Our workspace"
                             class="w-full h-full object-cover">
                    </div>
                    <div class="absolute -bottom-6 -right-6 h-full w-full border border-sand-300"></div>
                </div>
            </div>
        </div>
    </section>

    <!-- Newsletter -->
    <section class="py-20 bg-sand-900 text-white">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="max-w-2xl mx-auto text-center">
                <h2 class="font-serif text-3xl font-light mb-6">Join our community</h2>
                <p class="text-sand-300 font-light mb-8">
                    Subscribe to receive updates on new products, special offers, and lifestyle inspiration.
                </p>
                <form class="flex flex-col sm:flex-row gap-3">
                    <input type="email" placeholder="Your email address" class="flex-grow py-3 px-4 bg-transparent border border-sand-700 focus:border-white focus:outline-none placeholder-sand-500 font-light">
                    <button type="submit" class="bg-white hover:bg-sand-100 text-sand-900 py-3 px-10 uppercase tracking-widest text-sm font-light transition-colors">
                        Subscribe
                    </button>
                </form>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-white border-t border-sand-100 py-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8 mb-12">
                <div class="md:col-span-2">
                    <a href="#" class="font-serif text-2xl font-light tracking-wide text-sand-900 mb-6 block">SERENE</a>
                    <p class="text-sand-600 font-light max-w-sm mb-6">
                        Thoughtfully designed essentials for a more intentional life. Quality products for mindful living.
                    </p>
                    <div class="flex space-x-4">
                        <a href="#" class="text-sand-400 hover:text-sand-900 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z"/>
                            </svg>
                        </a>
                        <a href="#" class="text-sand-400 hover:text-sand-900 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                            </svg>
                        </a>
                        <a href="#" class="text-sand-400 hover:text-sand-900 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/>
                            </svg>
                        </a>
                        <a href="#" class="text-sand-400 hover:text-sand-900 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm4.441 16.892c-2.102.144-6.784.144-8.883 0-2.276-.156-2.541-1.27-2.558-4.892.017-3.629.285-4.736 2.558-4.892 2.099-.144 6.782-.144 8.883 0 2.277.156 2.541 1.27 2.559 4.892-.018 3.629-.285 4.736-2.559 4.892zm-6.441-7.234l4.917 2.338-4.917 2.346v-4.684z"/>
                            </svg>
                        </a>
                    </div>
                </div>

                <div>
                    <h3 class="text-sm uppercase tracking-widest font-medium mb-4">Shop</h3>
                    <ul class="space-y-2 font-light">
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">All Products</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">New Arrivals</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Best Sellers</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Sale</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Gift Cards</a></li>
                    </ul>
                </div>

                <div>
                    <h3 class="text-sm uppercase tracking-widest font-medium mb-4">About</h3>
                    <ul class="space-y-2 font-light">
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Our Story</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Values</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Sustainability</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Journal</a></li>
                        <li><a href="#" class="text-sand-600 hover:text-sand-900 transition-colors">Contact</a></li>
                    </ul>
                </div>
            </div>

            <div class="border-t border-sand-100 pt-8 flex flex-col md:flex-row justify-between items-center">
                <p class="text-sand-500 text-sm font-light">&copy; 2025 SERENE. All rights reserved.</p>
                <div class="flex flex-wrap gap-4 mt-4 md:mt-0">
                    <img src="https://cdn.iconscout.com/icon/free/png-256/visa-3-226460.png" alt="Visa" class="h-5 opacity-50">
                    <img src="https://cdn.iconscout.com/icon/free/png-256/mastercard-3-226462.png" alt="Mastercard" class="h-5 opacity-50">
                    <img src="https://cdn.iconscout.com/icon/free/png-256/paypal-54-226456.png" alt="PayPal" class="h-5 opacity-50">
                    <img src="https://cdn.iconscout.com/icon/free/png-256/apple-pay-4079230-3364522.png" alt="Apple Pay" class="h-5 opacity-50">
                </div>
            </div>
        </div>
    </footer>
</div>
</body>
</html>





----- the project, data strcuture that you should follow. knowing that products exist inside js/products.js & categories exist inside js/categories.js-----

File Structure:
/
├── index.html (home page)
├── products.html (product listing)
├── product.html (single product)
├── cart.html (cart page)
├── checkout.html (checkout process)
├── js/
│   ├── products.js (product data)
│   ├── categories.js (category data)
│   └── app.js (shared functionality)
└── css/
    └── styles.css (custom styles)




product's structure:
// IMPROVED PRODUCT STRUCTURE WITH NESTED OPTIONS
const PRODUCT = {
  // Basic Information
  id: Number,                    // Unique product ID 
  name: String,                  // Product name
  description: String,           // Product description
  base_price: Number,            // Starting price (renamed from price for clarity)
  base_shipping_cost: Number,    // Base cost for shipping this product
  free_shipping: Boolean,        // Whether shipping is free by default
  sku: String,                   // Stock keeping unit (unique product identifier)
  slug: String,                  // URL-friendly name
  brand: String,                 // Brand name
  rating: Number,                // Average rating (e.g., 4.5)
  reviews_count: Number,         // Total number of reviews
  
  // Status Information
  status: String,                // "active", "draft", "archived" (primary status)
  isFeatured: Boolean,           // Featured product flag
  isOnSale: Boolean,             // On sale flag
  requiresShipping: Boolean,     // Whether product needs to be shipped
  
  // Stock Management
  requiresInventoryTracking: Boolean,  // Whether to track stock for this product
  stock: Number,                 // Default product stock (if no variant selected)
  hasVariants: Boolean,          // Flag indicating if product requires variant selection
  totalVariantStock: Number,     // Total stock across all variants (calculated)
  lowStockThreshold: Number,     // Threshold for low stock alerts
  
  // Product Details
  features: Object,              // Either object with named features or array of features
  
  // Images
  images: [String],              // Base array of product images
  
  // Product Configuration
  options: {                     // Available option types and possible values
    // [optionName]: [possible values array]
  },
  
  // Option Images - Images for specific option values
  option_images: {               // Organized by option type and value
    // [optionName]: {
    //   [optionValue]: [imageURLs]
    // }
  },
  
  // Variant Images - Images for specific combinations of options
  variant_images: {
    // [OptionValue1|OptionValue2]: imageURL or [imageURLs]
  },
  
  // Variant-specific Inventory
  option_variants_stock: {      // Stock quantities for option variants
    // [OptionValue1|OptionValue2]: quantity
  },
  
  // Variant Pricing Adjustments - IMPROVED STRUCTURE
  option_price_adjustments: {
    // [optionName]: {
    //   [optionValue]: priceAdjustment
    // }
  },
  
  // Option Shipping Cost Adjustments - IMPROVED STRUCTURE
  option_shipping_adjustments: {
    // [optionName]: {
    //   [optionValue]: shippingCostAdjustment
    // }
  },
  
  // Physical Attributes
  weight: {                      // Product weight
    value: Number,
    unit: String                 // 'lb', 'kg', 'oz', etc.
  },
  dimensions: {                  // Product dimensions
    length: Number,
    width: Number,
    height: Number,
    unit: String                 // 'in', 'cm', 'mm', etc.
  },
  
  // Option Dimension Overrides - IMPROVED STRUCTURE
  option_dimension_overrides: {
    // [optionName]: {
    //   [optionValue]: {
    //     weight: { value: Number, unit: String },
    //     dimensions: { length: Number, width: Number, height: Number, unit: String }
    //   }
    // }
  },
  
  // Categories
  categories: [Number],          // Array of category IDs
  
  // Related Products
  upselling: [Number],           // Product IDs for upselling
  crossSelling: [Number],        // Product IDs for cross-selling
  relatedProducts: [Number],     // Product IDs for related products
  
  // Timestamps
  createdAt: String,             // ISO datetime string for creation time
  updatedAt: String              // ISO datetime string for last update time
};



product details as a demo example (this is not actually used this is just for demo purpose):
// Bluetooth Speaker Example with Improved Structure
const speakerProduct = {
  // Basic Information
  id: 2001,
  name: "SoundWave Portable Bluetooth Speaker",
  description: "Premium portable speaker with rich sound, 24-hour battery life, and waterproof design. Perfect for outdoor adventures or home use with seamless Bluetooth connectivity and built-in microphone for calls.",
  base_price: 79.99,
  base_shipping_cost: 5.99,
  free_shipping: false,
  sku: "AUDIO-SPK-2001",
  slug: "soundwave-portable-bluetooth-speaker",
  brand: "SoundWave",
  rating: 4.6,
  reviews_count: 287,
  
  // Status Information
  status: "active",
  isFeatured: true,
  isOnSale: true,
  requiresShipping: true,
  
  // Stock Management
  requiresInventoryTracking: true,
  stock: 0,  // Must select a color
  hasVariants: true,
  totalVariantStock: 215,
  lowStockThreshold: 15,
  
  // Product Details
  features: {
    batteryLife: "24 hours",
    waterproofRating: "IPX7",
    bluetoothVersion: "5.2",
    powerOutput: "20W",
    chargingTime: "3 hours",
    connectivity: "Bluetooth, AUX, USB-C",
    microphoneType: "Noise-cancelling",
    warranty: "2 years"
  },
  
  // Images
  images: [
    "https://images.unsplash.com/photo-1608043152269-423dbba4e7e1?w=800&auto=format&fit=crop",
    "https://images.unsplash.com/photo-1599669454699-248893623440?w=800&auto=format&fit=crop",
    "https://images.unsplash.com/photo-1484704849700-f032a568e944?w=800&auto=format&fit=crop"
  ],
  
  // Product Configuration
  options: {
    "color": ["black", "blue", "red", "green"],
    "edition": ["standard", "sport", "premium"]
  },
  
  // Option Images - Already has the nested structure we want
  option_images: {
    "color": {
      "black": ["https://images.unsplash.com/photo-1626946616376-d11bde4ba48f?w=800&auto=format&fit=crop"],
      "blue": ["https://images.unsplash.com/photo-1626946616489-73df1434cfac?w=800&auto=format&fit=crop"],
      "red": ["https://images.unsplash.com/photo-1626946616503-dea845326235?w=800&auto=format&fit=crop"],
      "green": ["https://images.unsplash.com/photo-1626946616537-33ab7c35d228?w=800&auto=format&fit=crop"]
    },
    "edition": {
      "sport": ["https://images.unsplash.com/photo-1588075345872-d8ffdbeac7bd?w=800&auto=format&fit=crop"],
      "premium": ["https://images.unsplash.com/photo-1524678714210-9917a6c619c2?w=800&auto=format&fit=crop"]
    }
  },
  
  // Variant Images - Remains the same (combination-specific)
  variant_images: {
    "blue|sport": "https://images.unsplash.com/photo-1522273500616-6b4757e4c184?w=800&auto=format&fit=crop",
    "red|premium": "https://images.unsplash.com/photo-1610156440283-a6f09e654e0d?w=800&auto=format&fit=crop"
  },
  
  // Option Variants Stock - Remains the same
  option_variants_stock: {
    "black|standard": 30,
    "black|sport": 25,
    "black|premium": 15,
    "blue|standard": 25,
    "blue|sport": 20,
    "blue|premium": 10,
    "red|standard": 20,
    "red|sport": 15,
    "red|premium": 10,
    "green|standard": 20,
    "green|sport": 15,
    "green|premium": 10
  },
  
  // Option Price Adjustments - IMPROVED STRUCTURE
  option_price_adjustments: {
    "edition": {
      "sport": 20.00,
      "premium": 50.00
    }
  },
  
  // Option Shipping Cost Adjustments - IMPROVED STRUCTURE
  option_shipping_adjustments: {
    "edition": {
      "premium": 0  // Free shipping for premium edition
    }
  },
  
  // Physical Attributes
  weight: { value: 0.85, unit: 'kg' },
  dimensions: { length: 20, width: 8, height: 8, unit: 'cm' },
  
  // Option Dimension Overrides - IMPROVED STRUCTURE
  option_dimension_overrides: {
    "edition": {
      "premium": {
        weight: { value: 1.2, unit: 'kg' },
        dimensions: { length: 25, width: 10, height: 10, unit: 'cm' }
      }
    }
  },
  
  // Categories
  categories: [301, 305, 310],  // Electronics, Audio, Bluetooth Speakers
  
  // Related Products
  upselling: [2005, 2010],      // Premium models
  crossSelling: [2101, 2201],   // Carrying case, power bank
  relatedProducts: [2002, 2003], // Other speakers
  
  // Timestamps
  createdAt: "2025-01-15T11:30:00Z",
  updatedAt: "2025-03-28T14:15:00Z"
};

another demo example:
// Gaming Laptop Example with Improved Structure
const laptopProduct = {
  // Basic Information
  id: 3001,
  name: "NexusForge Pro Gaming Laptop",
  description: "Professional-grade gaming laptop with customizable configuration. Built for esports professionals and hardcore gamers with cutting-edge performance, advanced cooling system, and premium display options.",
  base_price: 1499.99,
  base_shipping_cost: 29.99,
  free_shipping: false,
  sku: "COMP-LAPTOP-3001",
  slug: "nexusforge-pro-gaming-laptop",
  brand: "NexusForge",
  rating: 4.9,
  reviews_count: 324,
  
  // Status Information
  status: "active",
  isFeatured: true,
  isOnSale: false,
  requiresShipping: true,
  
  // Stock Management
  requiresInventoryTracking: true,
  stock: 0,  // Must configure
  hasVariants: true,
  totalVariantStock: 124,
  lowStockThreshold: 5,
  
  // Product Details
  features: {
    chassis: "Aircraft-grade aluminum",
    cooling: "Advanced dual-fan cooling system with copper heat pipes",
    keyboard: "Per-key RGB mechanical keyboard",
    audio: "3D surround sound with AI noise cancellation",
    battery: "Up to 6 hours gaming, 10 hours productivity",
    webcam: "1080p with privacy shutter",
    connectivity: "Wi-Fi 6E, Bluetooth 5.3, Thunderbolt 4",
    warranty: "3-year premium support"
  },
  
  // Images
  images: [
    "https://images.unsplash.com/photo-1603302576837-37561b2e2302?w=800&auto=format&fit=crop",
    "https://images.unsplash.com/photo-1588872657578-7efd1f1555ed?w=800&auto=format&fit=crop",
    "https://images.unsplash.com/photo-1525547719571-a2d4ac8945e2?w=800&auto=format&fit=crop",
    "https://images.unsplash.com/photo-1482235225574-c37692835cf3?w=800&auto=format&fit=crop"
  ],
  
  // Product Configuration
  options: {
    "processor": ["intel i7-14700H", "intel i9-14900HX", "amd ryzen 9 7950X"],
    "graphics": ["nvidia rtx 4070 8GB", "nvidia rtx 4080 12GB", "nvidia rtx 4090 16GB"],
    "ram": ["16GB DDR5", "32GB DDR5", "64GB DDR5"],
    "storage": ["512GB NVMe", "1TB NVMe", "2TB NVMe", "4TB NVMe"],
    "display": ["15.6\" FHD 144Hz", "15.6\" QHD 240Hz", "17.3\" FHD 144Hz", "17.3\" QHD 240Hz"],
    "os": ["windows 11 home", "windows 11 pro"]
  },
  
  // Option Images - Already nested by option type
  option_images: {
    "processor": {
      "intel i9-14900HX": ["https://images.unsplash.com/photo-1591799264318-7e6ef8ddb7ea?w=800&auto=format&fit=crop"],
      "amd ryzen 9 7950X": ["https://images.unsplash.com/photo-1562408590-e32931084e23?w=800&auto=format&fit=crop"]
    },
    "graphics": {
      "nvidia rtx 4080 12GB": ["https://images.unsplash.com/photo-1555618568-bdf0a992c512?w=800&auto=format&fit=crop"],
      "nvidia rtx 4090 16GB": ["https://images.unsplash.com/photo-1551643556-0e32e07d70dd?w=800&auto=format&fit=crop"]
    },
    "display": {
      "15.6\" QHD 240Hz": ["https://images.unsplash.com/photo-1551883040-0256b70c6ee9?w=800&auto=format&fit=crop"],
      "17.3\" QHD 240Hz": ["https://images.unsplash.com/photo-1533740566848-5f7d3e04e3d7?w=800&auto=format&fit=crop"]
    }
  },
  
  // Variant Images - Remains the same (combination-specific)
  variant_images: {
    "intel i9-14900HX|nvidia rtx 4090 16GB|17.3\" QHD 240Hz": [
      "https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=800&auto=format&fit=crop",
      "https://images.unsplash.com/photo-1593642702821-c8da6771f0c6?w=800&auto=format&fit=crop"
    ],
    "amd ryzen 9 7950X|nvidia rtx 4080 12GB|15.6\" QHD 240Hz": "https://images.unsplash.com/photo-1587202372775-e229f172b9d7?w=800&auto=format&fit=crop"
  },
  
  // Option Variants Stock - Remains the same
  option_variants_stock: {
    // Base models with i7 processor
    "intel i7-14700H|nvidia rtx 4070 8GB|16GB DDR5|512GB NVMe|15.6\" FHD 144Hz|windows 11 home": 15,
    "intel i7-14700H|nvidia rtx 4070 8GB|16GB DDR5|1TB NVMe|15.6\" FHD 144Hz|windows 11 home": 12,
    "intel i7-14700H|nvidia rtx 4070 8GB|32GB DDR5|1TB NVMe|15.6\" FHD 144Hz|windows 11 home": 10,
    "intel i7-14700H|nvidia rtx 4070 8GB|32GB DDR5|1TB NVMe|15.6\" QHD 240Hz|windows 11 home": 8,
    
    // Mid-tier models with i9 processor
    "intel i9-14900HX|nvidia rtx 4080 12GB|32GB DDR5|1TB NVMe|15.6\" QHD 240Hz|windows 11 home": 10,
    "intel i9-14900HX|nvidia rtx 4080 12GB|32GB DDR5|2TB NVMe|15.6\" QHD 240Hz|windows 11 home": 8,
    "intel i9-14900HX|nvidia rtx 4080 12GB|32GB DDR5|2TB NVMe|15.6\" QHD 240Hz|windows 11 pro": 6,
    "intel i9-14900HX|nvidia rtx 4080 12GB|32GB DDR5|2TB NVMe|17.3\" QHD 240Hz|windows 11 pro": 5,
    
    // High-end models with i9 and RTX 4090
    "intel i9-14900HX|nvidia rtx 4090 16GB|32GB DDR5|2TB NVMe|17.3\" QHD 240Hz|windows 11 pro": 7,
    "intel i9-14900HX|nvidia rtx 4090 16GB|64GB DDR5|2TB NVMe|17.3\" QHD 240Hz|windows 11 pro": 4,
    "intel i9-14900HX|nvidia rtx 4090 16GB|64GB DDR5|4TB NVMe|17.3\" QHD 240Hz|windows 11 pro": 2,
    
    // AMD models
    "amd ryzen 9 7950X|nvidia rtx 4070 8GB|32GB DDR5|1TB NVMe|15.6\" FHD 144Hz|windows 11 home": 8,
    "amd ryzen 9 7950X|nvidia rtx 4080 12GB|32GB DDR5|1TB NVMe|15.6\" QHD 240Hz|windows 11 home": 6,
    "amd ryzen 9 7950X|nvidia rtx 4080 12GB|32GB DDR5|2TB NVMe|15.6\" QHD 240Hz|windows 11 pro": 5,
    "amd ryzen 9 7950X|nvidia rtx 4090 16GB|64GB DDR5|2TB NVMe|17.3\" QHD 240Hz|windows 11 pro": 3
  },
  
  // Option Price Adjustments - IMPROVED STRUCTURE
  option_price_adjustments: {
    "processor": {
      "intel i9-14900HX": 300.00,
      "amd ryzen 9 7950X": 250.00
    },
    "graphics": {
      "nvidia rtx 4080 12GB": 300.00,
      "nvidia rtx 4090 16GB": 800.00
    },
    "ram": {
      "32GB DDR5": 150.00,
      "64GB DDR5": 400.00
    },
    "storage": {
      "1TB NVMe": 100.00,
      "2TB NVMe": 250.00,
      "4TB NVMe": 500.00
    },
    "display": {
      "15.6\" QHD 240Hz": 200.00,
      "17.3\" FHD 144Hz": 150.00,
      "17.3\" QHD 240Hz": 350.00
    },
    "os": {
      "windows 11 pro": 100.00
    }
  },
  
  // Option Shipping Cost Adjustments - IMPROVED STRUCTURE
  option_shipping_adjustments: {
    "display": {
      "17.3\" FHD 144Hz": 10.00,
      "17.3\" QHD 240Hz": 10.00
    }
  },
  
  // Physical Attributes
  weight: { value: 2.2, unit: 'kg' },
  dimensions: { length: 36, width: 26, height: 2, unit: 'cm' },
  
  // Option Dimension Overrides - IMPROVED STRUCTURE
  option_dimension_overrides: {
    "display": {
      "17.3\" FHD 144Hz": {
        weight: { value: 2.5, unit: 'kg' },
        dimensions: { length: 40, width: 28, height: 2.2, unit: 'cm' }
      },
      "17.3\" QHD 240Hz": {
        weight: { value: 2.6, unit: 'kg' },
        dimensions: { length: 40, width: 28, height: 2.3, unit: 'cm' }
      }
    }
  },
  
  // Categories
  categories: [101, 105, 110],  // Computers, Laptops, Gaming
  
  // Related Products
  upselling: [3005, 3010],      // Premium laptop models
  crossSelling: [3101, 3201],   // Gaming peripherals, laptop accessories
  relatedProducts: [3002, 3003], // Other gaming laptops
  
  // Timestamps
  createdAt: "2025-01-05T09:00:00Z",
  updatedAt: "2025-04-02T11:45:00Z"
};




const CATEGORIES = [
    {
        id: 1,
        name: 'Beef',
        slug: 'beef',
        description: 'All beef products',
        imageUrl: 'https://example.com/beef.jpg',
        featured: true,
        parent_id: null,  // Top level
        active: true,
        display_order: 10,
        productIds: [],  // No direct products, just subcategories
        created_at: '2025-01-01T00:00:00Z',
        updated_at: '2025-01-01T00:00:00Z'
    },
    {
        id: 2,
        name: 'Steaks',
        slug: 'steaks',
        description: 'Expertly cut steaks for grilling and pan-searing',
        imageUrl: 'https://images.unsplash.com/photo-1588168333986-5078d3ae3976?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80',
        featured: true,
        parent_id: 1,  // Child of Beef
        active: true,
        display_order: 20,
        productIds: [1, 2, 5],
        created_at: '2025-01-02T10:30:00Z',
        updated_at: '2025-03-15T14:45:00Z'
    },
    {
        id: 3,
        name: 'Premium Steaks',
        slug: 'premium-steaks',
        description: 'Our finest selection of premium steaks',
        imageUrl: 'https://example.com/premium-steaks.jpg',
        featured: true,
        parent_id: 2,  // Child of Steaks
        active: true,
        display_order: 30,
        productIds: [1, 2],
        created_at: '2025-01-03T09:15:00Z',
        updated_at: '2025-01-03T09:15:00Z'
    },
    {
        id: 4,
        name: 'Value Steaks',
        slug: 'value-steaks',
        description: 'Great quality at affordable prices',
        imageUrl: 'https://example.com/value-steaks.jpg',
        featured: false,
        parent_id: 2,  // Child of Steaks
        active: true,
        display_order: 40,
        productIds: [5],
        created_at: '2025-01-04T11:00:00Z',
        updated_at: '2025-04-01T16:20:00Z'
    },
    {
        id: 5,
        name: 'Roasts',
        slug: 'roasts',
        description: 'Perfect cuts for slow-roasting and special occasions',
        imageUrl: 'https://images.unsplash.com/photo-1606502973842-f64bc2785fe5?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80',
        featured: false,
        parent_id: 1,  // Child of Beef
        active: true,
        display_order: 50,
        productIds: [3],
        created_at: '2025-01-05T13:45:00Z',
        updated_at: '2025-01-05T13:45:00Z'
    }
];
